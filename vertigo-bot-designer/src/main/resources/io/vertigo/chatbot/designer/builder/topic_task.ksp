package io.vertigo.chatbot.designer.builder.topic


create Task TkRemoveAllNluTrainingSentenceByBotId {
    className : "io.vertigo.basics.task.TaskEngineProc"
    request : "
			delete from nlu_training_sentence nts
			using topic top
			where nts.top_id = top.top_id and top.bot_id = #botId#
             "
	in botId  				{domain : DoId         		cardinality : "1"  }
}

create Task TkGetAllTopicFromCategory {  
    className : "io.vertigo.basics.task.TaskEngineSelect"
    request : "
			select top.*
			from topic top
			join topic_category tpc on (tpc.top_cat_id = top.top_cat_id)
			where tpc.top_cat_id = #topCatId#
             "
	in topCatId				{domain : DoId,						cardinality:"1"} 
	out tpcs 				{domain : DoDtTopic		 			cardinality:"*"}
} 

create Task TkGetAllTopicRelativeSmallTalkByBotId{  
    className : "io.vertigo.basics.task.TaskEngineSelect"
    request : "
			select top.*
			from topic top
			join small_talk smt on (smt.top_id = top.top_id)
			join topic_category tca on tca.top_cat_id = top.top_cat_id
			where top.bot_id = #botId# and top.is_enabled = true and tca.is_technical = false
             "
	in botId				{domain : DoId,						cardinality:"1"} 
	out tpcs 				{domain : DoDtTopic		 			cardinality:"*"}
} 

create Task TkGetAllTopicRelativeScriptIntentByBotId{  
    className : "io.vertigo.basics.task.TaskEngineSelect"
    request : "
			select top.*
			from topic top
			join script_intention sin on (sin.top_id = top.top_id)
			join topic_category tca on tca.top_cat_id = top.top_cat_id
			where top.bot_id = #botId# and top.is_enabled = true and tca.is_technical = false
             "
	in botId				{domain : DoId,						cardinality:"1"} 
	out tpcs 				{domain : DoDtTopic		 			cardinality:"*"}
} 


create Task TkRemoveAllTopicsFromBot {
    className : "io.vertigo.basics.task.TaskEngineProc"
    request : "
			delete from topic top 
			where top.bot_id = #botId#
             "
	in botId  				{domain : DoId         		cardinality : "1"  }
}

create Task TkGetAllTopicsIhmFromBot {
    className : "io.vertigo.basics.task.TaskEngineSelect"
    request : "
			SELECT 	top.top_id,
					top.title,
					top.code,
					smt.smt_id,
					sin.sin_id,
					top.is_enabled,
					CASE #locale#
						WHEN 'fr_FR' THEN tto.label_fr
						ELSE tto.label
					END as type,
					top.tto_cd,
					tpc.label as cat_label,
					string_agg(tpl.label, ',') as labels
			from topic top 
			left join small_talk smt on smt.top_id = top.top_id
			left join script_intention sin on sin.top_id = top.top_id
			join type_topic tto on top.tto_cd = tto.tto_cd
			join topic_category tpc on (tpc.top_cat_id = top.top_cat_id)
			left join topic_topic_label ttl on (ttl.top_id = top.top_id)
			left join topic_label tpl on (tpl.label_id = ttl.label_id)
			where top.bot_id = #botId#
			<% if (ktoCds != null){ %>
				and top.kto_cd in (#ktoCds.rownum#)
			<% } %>
			group by top.top_id,
					top.title,
					top.code,
					smt.smt_id,
					sin.sin_id,
					top.is_enabled,
					tto.label,
					tto.label_fr,
					top.tto_cd,
					tpc.label
			
             "
	in botId  				{domain : DoId         		cardinality : "1"  }	
	in ktoCds  				{domain : DoCode         	cardinality : "*"  }
	in locale  				{domain : DoCode         	cardinality : "1"  }
	out topicIHM			{domain : DoDtTopicIhm,		cardinality : "*"  } 
}

create Task TkGetTopicIhmById {
    className : "io.vertigo.basics.task.TaskEngineSelect"
    request : "
			SELECT 	top.top_id,
					top.title,
					top.code,
					smt.smt_id,
					sin.sin_id,
					top.is_enabled,
					tto.label as type,
					top.tto_cd,
					tpc.label as cat_label,
					string_agg(tpl.label, ',') as labels
			from topic top 
			left join small_talk smt on smt.top_id = top.top_id
			left join script_intention sin on sin.top_id = top.top_id
			join type_topic tto on top.tto_cd = tto.tto_cd
			join topic_category tpc on (tpc.top_cat_id = top.top_cat_id)
			left join topic_topic_label ttl on (ttl.top_id = top.top_id)
			left join topic_label tpl on (tpl.label_id = ttl.label_id)
			where top.top_id = #topId#
			group by top.top_id,
					top.title,
					top.code,
					smt.smt_id,
					sin.sin_id,
					top.is_enabled,
					tto.label ,
					top.tto_cd,
					tpc.label
			
			LIMIT 1
             "
	in topId  				{domain : DoId         		cardinality : "1"  }
	out topicIHM			{domain : DoDtTopicIhm		cardinality : "1"  } 
}

create Task TkCheckUnicityTopicCode{
    className : "io.vertigo.basics.task.TaskEngineSelect"
    request : "
				select exists(
					select 1
					from topic top 
					where top.bot_id = #botId# and top.code = #code#
					<%if (topId != null) { %>
						and top.top_id != #topId#
					<% } %>
				)
             "
	in botId  				{domain : DoId         		cardinality : "1"  	}
	in code					{domain : DoLabel			cardinality : "1"	}
	in topId  				{domain : DoId         		cardinality : "?"  	}
	out exist				{domain : DoYesNo			cardinality : "1"  	} 
}


create Task TkGetBasicTopicByBotIdKtoCd {
    className : "io.vertigo.basics.task.TaskEngineSelect"
    request : "
			SELECT 	top.*
			from topic top 
			where top.bot_id = #botId#
			and top.kto_cd = #ktoCd#
             "
	in botId  				{domain : DoId         		cardinality : "1"  }
	in ktoCd  				{domain : DoCode         	cardinality : "1"  }
	out topic				{domain : DoDtTopic,		cardinality : "1"  } 
}

create Task TkGetTopicReferencingTopId {  
    className : "io.vertigo.basics.task.TaskEngineSelect"
    request : "
			select top.*
			from topic top
			join small_talk smt on smt.top_id = top.top_id
			inner join response_button rbu on smt.smt_id = rbu.smt_id
			where rbu.top_id_response = #topId#
            "
	in topId				{domain : DoId,						cardinality:"1"} 
	out topic 				{domain : DoDtTopic		 			cardinality:"*"}
} 

create Task TkGetTopicByCodeBotId {  
    className : "io.vertigo.basics.task.TaskEngineSelect"
    request : "
			select top.*
			from topic top
			where top.bot_id = #botId#
			and top.code = #code#
            "
	in botId				{domain : DoId,						cardinality:"1"} 
	in code					{domain : DoCode         			cardinality:"1" }
	out topic 				{domain : DoDtTopic		 			cardinality:"*"}
} 
create Task TkGetTopicFromCode {  
    className : "io.vertigo.basics.task.TaskEngineSelect"
    request : "
			select top.*
			from topic top
			where top.code = #code# and top.bot_id = #botId#
             "
	in code					{domain : DoLabel,					cardinality:"1"}
	in botId				{domain : DoId,						cardinality:"1"}  
	out topic 				{domain : DoDtTopic		 			cardinality:"?"}
} 



