package io.vertigo.chatbot.designer.domain;

import io.vertigo.core.lang.Generated;
import io.vertigo.datamodel.structure.model.Entity;
import io.vertigo.datastore.impl.entitystore.EnumStoreVAccessor;
import io.vertigo.datamodel.structure.model.UID;
import io.vertigo.datastore.impl.entitystore.StoreVAccessor;
import io.vertigo.datamodel.structure.stereotype.Field;
import io.vertigo.datamodel.structure.util.DtObjectUtil;

/**
 * This class is automatically generated.
 * DO NOT EDIT THIS FILE DIRECTLY.
 */
@Generated
public final class History implements Entity {
	private static final long serialVersionUID = 1L;

	private Long histId;
	private java.time.Instant date;
	private String className;
	private String message;
	private String userName;

	@io.vertigo.datamodel.structure.stereotype.Association(
			name = "AHistoryHistoryAction",
			fkFieldName = "hacCd",
			primaryDtDefinitionName = "DtHistoryAction",
			primaryIsNavigable = true,
			primaryRole = "HistoryAction",
			primaryLabel = "Action",
			primaryMultiplicity = "1..1",
			foreignDtDefinitionName = "DtHistory",
			foreignIsNavigable = false,
			foreignRole = "History",
			foreignLabel = "History",
			foreignMultiplicity = "0..*")
	private final EnumStoreVAccessor<io.vertigo.chatbot.designer.domain.HistoryAction, io.vertigo.chatbot.designer.domain.HistoryActionEnum> hacCdAccessor = new EnumStoreVAccessor<>(io.vertigo.chatbot.designer.domain.HistoryAction.class, "HistoryAction", io.vertigo.chatbot.designer.domain.HistoryActionEnum.class);

	@io.vertigo.datamodel.structure.stereotype.Association(
			name = "AHistoryChatbot",
			fkFieldName = "botId",
			primaryDtDefinitionName = "DtChatbot",
			primaryIsNavigable = true,
			primaryRole = "Chatbot",
			primaryLabel = "Chatbot",
			primaryMultiplicity = "1..1",
			foreignDtDefinitionName = "DtHistory",
			foreignIsNavigable = false,
			foreignRole = "History",
			foreignLabel = "History",
			foreignMultiplicity = "0..*")
	private final StoreVAccessor<io.vertigo.chatbot.commons.domain.Chatbot> botIdAccessor = new StoreVAccessor<>(io.vertigo.chatbot.commons.domain.Chatbot.class, "Chatbot");

	/** {@inheritDoc} */
	@Override
	public UID<History> getUID() {
		return UID.of(this);
	}
	
	/**
	 * Champ : ID.
	 * Récupère la valeur de la propriété 'History id'.
	 * @return Long histId <b>Obligatoire</b>
	 */
	@Field(smartType = "STyId", type = "ID", cardinality = io.vertigo.core.lang.Cardinality.ONE, label = "History id")
	public Long getHistId() {
		return histId;
	}

	/**
	 * Champ : ID.
	 * Définit la valeur de la propriété 'History id'.
	 * @param histId Long <b>Obligatoire</b>
	 */
	public void setHistId(final Long histId) {
		this.histId = histId;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'Date'.
	 * @return Instant date <b>Obligatoire</b>
	 */
	@Field(smartType = "STyInstant", cardinality = io.vertigo.core.lang.Cardinality.ONE, label = "Date")
	public java.time.Instant getDate() {
		return date;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'Date'.
	 * @param date Instant <b>Obligatoire</b>
	 */
	public void setDate(final java.time.Instant date) {
		this.date = date;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'Class name'.
	 * @return String className <b>Obligatoire</b>
	 */
	@Field(smartType = "STyLabel", cardinality = io.vertigo.core.lang.Cardinality.ONE, label = "Class name")
	public String getClassName() {
		return className;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'Class name'.
	 * @param className String <b>Obligatoire</b>
	 */
	public void setClassName(final String className) {
		this.className = className;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'Label'.
	 * @return String message <b>Obligatoire</b>
	 */
	@Field(smartType = "STyLabel", cardinality = io.vertigo.core.lang.Cardinality.ONE, label = "Label")
	public String getMessage() {
		return message;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'Label'.
	 * @param message String <b>Obligatoire</b>
	 */
	public void setMessage(final String message) {
		this.message = message;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'User'.
	 * @return String userName <b>Obligatoire</b>
	 */
	@Field(smartType = "STyLabel", cardinality = io.vertigo.core.lang.Cardinality.ONE, label = "User")
	public String getUserName() {
		return userName;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'User'.
	 * @param userName String <b>Obligatoire</b>
	 */
	public void setUserName(final String userName) {
		this.userName = userName;
	}
	
	/**
	 * Champ : FOREIGN_KEY.
	 * Récupère la valeur de la propriété 'Action'.
	 * @return String hacCd <b>Obligatoire</b>
	 */
	@io.vertigo.datamodel.structure.stereotype.ForeignKey(smartType = "STyCode", label = "Action", fkDefinition = "DtHistoryAction", cardinality = io.vertigo.core.lang.Cardinality.ONE )
	public String getHacCd() {
		return (String) hacCdAccessor.getId();
	}

	/**
	 * Champ : FOREIGN_KEY.
	 * Définit la valeur de la propriété 'Action'.
	 * @param hacCd String <b>Obligatoire</b>
	 */
	public void setHacCd(final String hacCd) {
		hacCdAccessor.setId(hacCd);
	}
	
	/**
	 * Champ : FOREIGN_KEY.
	 * Récupère la valeur de la propriété 'Chatbot'.
	 * @return Long botId <b>Obligatoire</b>
	 */
	@io.vertigo.datamodel.structure.stereotype.ForeignKey(smartType = "STyId", label = "Chatbot", fkDefinition = "DtChatbot", cardinality = io.vertigo.core.lang.Cardinality.ONE )
	public Long getBotId() {
		return (Long) botIdAccessor.getId();
	}

	/**
	 * Champ : FOREIGN_KEY.
	 * Définit la valeur de la propriété 'Chatbot'.
	 * @param botId Long <b>Obligatoire</b>
	 */
	public void setBotId(final Long botId) {
		botIdAccessor.setId(botId);
	}

 	/**
	 * Association : Chatbot.
	 * @return l'accesseur vers la propriété 'Chatbot'
	 */
	public StoreVAccessor<io.vertigo.chatbot.commons.domain.Chatbot> chatbot() {
		return botIdAccessor;
	}

 	/**
	 * Association : Action.
	 * @return l'accesseur vers la propriété 'Action'
	 */
	public EnumStoreVAccessor<io.vertigo.chatbot.designer.domain.HistoryAction, io.vertigo.chatbot.designer.domain.HistoryActionEnum> historyAction() {
		return hacCdAccessor;
	}
	
	/** {@inheritDoc} */
	@Override
	public String toString() {
		return DtObjectUtil.toString(this);
	}
}
