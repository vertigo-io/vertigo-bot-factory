package io.vertigo.chatbot.designer.domain.admin;

import io.vertigo.core.lang.Generated;
import io.vertigo.datamodel.data.model.Entity;
import io.vertigo.datastore.impl.entitystore.EnumStoreVAccessor;
import io.vertigo.datamodel.data.model.UID;
import io.vertigo.datastore.impl.entitystore.StoreVAccessor;
import io.vertigo.datamodel.data.stereotype.Field;
import io.vertigo.datamodel.data.util.DataModelUtil;

/**
 * This class is automatically generated.
 * DO NOT EDIT THIS FILE DIRECTLY.
 */
@Generated
public final class ProfilPerChatbot implements Entity {
	private static final long serialVersionUID = 1L;

	private Long chpId;

	@io.vertigo.datamodel.data.stereotype.Association(
			name = "APRrofilChatboToChatbot",
			fkFieldName = "botId",
			primaryDtDefinitionName = "DtChatbot",
			primaryIsNavigable = true,
			primaryRole = "Chatbot",
			primaryLabel = "Chatbot",
			primaryMultiplicity = "1..1",
			foreignDtDefinitionName = "DtProfilPerChatbot",
			foreignIsNavigable = false,
			foreignRole = "ProfilPerChatbot",
			foreignLabel = "ProfilPerChatbot",
			foreignMultiplicity = "0..*")
	private final StoreVAccessor<io.vertigo.chatbot.commons.domain.Chatbot> botIdAccessor = new StoreVAccessor<>(io.vertigo.chatbot.commons.domain.Chatbot.class, "Chatbot");

	@io.vertigo.datamodel.data.stereotype.Association(
			name = "APRrofilChatbotToPerson",
			fkFieldName = "perId",
			primaryDtDefinitionName = "DtPerson",
			primaryIsNavigable = true,
			primaryRole = "Person",
			primaryLabel = "Person",
			primaryMultiplicity = "1..1",
			foreignDtDefinitionName = "DtProfilPerChatbot",
			foreignIsNavigable = false,
			foreignRole = "ProfilPerChatbot",
			foreignLabel = "ProfilPerChatbot",
			foreignMultiplicity = "0..*")
	private final StoreVAccessor<io.vertigo.chatbot.designer.domain.commons.Person> perIdAccessor = new StoreVAccessor<>(io.vertigo.chatbot.designer.domain.commons.Person.class, "Person");

	@io.vertigo.datamodel.data.stereotype.Association(
			name = "APRrofilChatbotToCodeProfil",
			fkFieldName = "chpCd",
			primaryDtDefinitionName = "DtChatbotProfiles",
			primaryIsNavigable = true,
			primaryRole = "ChatbotProfiles",
			primaryLabel = "Profil pour un chatbot",
			primaryMultiplicity = "1..1",
			foreignDtDefinitionName = "DtProfilPerChatbot",
			foreignIsNavigable = false,
			foreignRole = "ProfilPerChatbot",
			foreignLabel = "ProfilPerChatbot",
			foreignMultiplicity = "0..*")
	private final EnumStoreVAccessor<io.vertigo.chatbot.designer.domain.admin.ChatbotProfiles, io.vertigo.chatbot.designer.domain.admin.ChatbotProfilesEnum> chpCdAccessor = new EnumStoreVAccessor<>(io.vertigo.chatbot.designer.domain.admin.ChatbotProfiles.class, "ChatbotProfiles", io.vertigo.chatbot.designer.domain.admin.ChatbotProfilesEnum.class);

	/** {@inheritDoc} */
	@Override
	public UID<ProfilPerChatbot> getUID() {
		return UID.of(this);
	}
	
	/**
	 * Champ : ID.
	 * Récupère la valeur de la propriété 'ID'.
	 * @return Long chpId <b>Obligatoire</b>
	 */
	@Field(smartType = "STyId", type = "ID", cardinality = io.vertigo.core.lang.Cardinality.ONE, label = "ID")
	public Long getChpId() {
		return chpId;
	}

	/**
	 * Champ : ID.
	 * Définit la valeur de la propriété 'ID'.
	 * @param chpId Long <b>Obligatoire</b>
	 */
	public void setChpId(final Long chpId) {
		this.chpId = chpId;
	}
	
	/**
	 * Champ : FOREIGN_KEY.
	 * Récupère la valeur de la propriété 'Chatbot'.
	 * @return Long botId <b>Obligatoire</b>
	 */
	@io.vertigo.datamodel.data.stereotype.ForeignKey(smartType = "STyId", label = "Chatbot", fkDefinition = "DtChatbot", cardinality = io.vertigo.core.lang.Cardinality.ONE )
	public Long getBotId() {
		return (Long) botIdAccessor.getId();
	}

	/**
	 * Champ : FOREIGN_KEY.
	 * Définit la valeur de la propriété 'Chatbot'.
	 * @param botId Long <b>Obligatoire</b>
	 */
	public void setBotId(final Long botId) {
		botIdAccessor.setId(botId);
	}
	
	/**
	 * Champ : FOREIGN_KEY.
	 * Récupère la valeur de la propriété 'Person'.
	 * @return Long perId <b>Obligatoire</b>
	 */
	@io.vertigo.datamodel.data.stereotype.ForeignKey(smartType = "STyId", label = "Person", fkDefinition = "DtPerson", cardinality = io.vertigo.core.lang.Cardinality.ONE )
	public Long getPerId() {
		return (Long) perIdAccessor.getId();
	}

	/**
	 * Champ : FOREIGN_KEY.
	 * Définit la valeur de la propriété 'Person'.
	 * @param perId Long <b>Obligatoire</b>
	 */
	public void setPerId(final Long perId) {
		perIdAccessor.setId(perId);
	}
	
	/**
	 * Champ : FOREIGN_KEY.
	 * Récupère la valeur de la propriété 'Profil pour un chatbot'.
	 * @return String chpCd <b>Obligatoire</b>
	 */
	@io.vertigo.datamodel.data.stereotype.ForeignKey(smartType = "STyCode", label = "Profil pour un chatbot", fkDefinition = "DtChatbotProfiles", cardinality = io.vertigo.core.lang.Cardinality.ONE )
	public String getChpCd() {
		return (String) chpCdAccessor.getId();
	}

	/**
	 * Champ : FOREIGN_KEY.
	 * Définit la valeur de la propriété 'Profil pour un chatbot'.
	 * @param chpCd String <b>Obligatoire</b>
	 */
	public void setChpCd(final String chpCd) {
		chpCdAccessor.setId(chpCd);
	}

 	/**
	 * Association : Chatbot.
	 * @return l'accesseur vers la propriété 'Chatbot'
	 */
	public StoreVAccessor<io.vertigo.chatbot.commons.domain.Chatbot> chatbot() {
		return botIdAccessor;
	}

 	/**
	 * Association : Profil pour un chatbot.
	 * @return l'accesseur vers la propriété 'Profil pour un chatbot'
	 */
	public EnumStoreVAccessor<io.vertigo.chatbot.designer.domain.admin.ChatbotProfiles, io.vertigo.chatbot.designer.domain.admin.ChatbotProfilesEnum> chatbotProfiles() {
		return chpCdAccessor;
	}

 	/**
	 * Association : Person.
	 * @return l'accesseur vers la propriété 'Person'
	 */
	public StoreVAccessor<io.vertigo.chatbot.designer.domain.commons.Person> person() {
		return perIdAccessor;
	}
	
	/** {@inheritDoc} */
	@Override
	public String toString() {
		return DataModelUtil.toString(this);
	}
}
