package io.vertigo.chatbot.designer.domain.monitoring;

import io.vertigo.core.lang.Generated;
import io.vertigo.datamodel.data.model.Entity;
import io.vertigo.datastore.impl.entitystore.StoreListVAccessor;
import io.vertigo.datamodel.data.model.UID;
import io.vertigo.datastore.impl.entitystore.StoreVAccessor;
import io.vertigo.datamodel.data.stereotype.Field;
import io.vertigo.datamodel.data.util.DataModelUtil;

/**
 * This class is automatically generated.
 * DO NOT EDIT THIS FILE DIRECTLY.
 */
@Generated
public final class MonitoringAlertingSubscription implements Entity {
	private static final long serialVersionUID = 1L;

	private Long masID;
	private Boolean alertingGlobal;

	@io.vertigo.datamodel.data.stereotype.Association(
			name = "AMonitoringAlertingSubscriptionPerson",
			fkFieldName = "perId",
			primaryDtDefinitionName = "DtPerson",
			primaryIsNavigable = true,
			primaryRole = "Person",
			primaryLabel = "Person",
			primaryMultiplicity = "0..1",
			foreignDtDefinitionName = "DtMonitoringAlertingSubscription",
			foreignIsNavigable = false,
			foreignRole = "MonitoringAlertingSubscription",
			foreignLabel = "MonitoringAlertingSubscription",
			foreignMultiplicity = "0..*")
	private final StoreVAccessor<io.vertigo.chatbot.designer.domain.commons.Person> perIdAccessor = new StoreVAccessor<>(io.vertigo.chatbot.designer.domain.commons.Person.class, "Person");

	@io.vertigo.datamodel.data.stereotype.AssociationNN(
			name = "AnnAlertingSubscriptionChatbot",
			tableName = "ALERTING_SUBSCRIPTION_CHATBOT",
			dataDefinitionA = "DtMonitoringAlertingSubscription",
			dataDefinitionB = "DtChatbot",
			navigabilityA = true,
			navigabilityB = true,
			roleA = "Alerte",
			roleB = "Chatbot",
			labelA = "Alerte",
			labelB = "Chatbot")
	private final StoreListVAccessor<io.vertigo.chatbot.commons.domain.Chatbot> chatbotAccessor = new StoreListVAccessor<>(this, "AnnAlertingSubscriptionChatbot", "Chatbot");

	/** {@inheritDoc} */
	@Override
	public UID<MonitoringAlertingSubscription> getUID() {
		return UID.of(this);
	}
	
	/**
	 * Champ : ID.
	 * Récupère la valeur de la propriété 'ID'.
	 * @return Long masID <b>Obligatoire</b>
	 */
	@Field(smartType = "STyId", type = "ID", cardinality = io.vertigo.core.lang.Cardinality.ONE, label = "ID")
	public Long getMasID() {
		return masID;
	}

	/**
	 * Champ : ID.
	 * Définit la valeur de la propriété 'ID'.
	 * @param masID Long <b>Obligatoire</b>
	 */
	public void setMasID(final Long masID) {
		this.masID = masID;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'Alerting global enabled'.
	 * @return Boolean alertingGlobal <b>Obligatoire</b>
	 */
	@Field(smartType = "STyYesNo", cardinality = io.vertigo.core.lang.Cardinality.ONE, label = "Alerting global enabled")
	public Boolean getAlertingGlobal() {
		return alertingGlobal;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'Alerting global enabled'.
	 * @param alertingGlobal Boolean <b>Obligatoire</b>
	 */
	public void setAlertingGlobal(final Boolean alertingGlobal) {
		this.alertingGlobal = alertingGlobal;
	}
	
	/**
	 * Champ : FOREIGN_KEY.
	 * Récupère la valeur de la propriété 'Person'.
	 * @return Long perId
	 */
	@io.vertigo.datamodel.data.stereotype.ForeignKey(smartType = "STyId", label = "Person", fkDefinition = "DtPerson" )
	public Long getPerId() {
		return (Long) perIdAccessor.getId();
	}

	/**
	 * Champ : FOREIGN_KEY.
	 * Définit la valeur de la propriété 'Person'.
	 * @param perId Long
	 */
	public void setPerId(final Long perId) {
		perIdAccessor.setId(perId);
	}

 	/**
	 * Association : Person.
	 * @return l'accesseur vers la propriété 'Person'
	 */
	public StoreVAccessor<io.vertigo.chatbot.designer.domain.commons.Person> person() {
		return perIdAccessor;
	}

	/**
	 * Association : Chatbot.
	 * @return l'accesseur vers la propriété 'Chatbot'
	 */
	public StoreListVAccessor<io.vertigo.chatbot.commons.domain.Chatbot> chatbot() {
		return chatbotAccessor;
	}
	
	/** {@inheritDoc} */
	@Override
	public String toString() {
		return DataModelUtil.toString(this);
	}
}
