package io.vertigo.chatbot.commons.domain;

import io.vertigo.core.lang.Generated;
import io.vertigo.datamodel.data.model.Entity;
import io.vertigo.datamodel.data.model.UID;
import io.vertigo.datastore.impl.entitystore.StoreVAccessor;
import io.vertigo.datamodel.data.stereotype.Field;
import io.vertigo.datamodel.data.util.DataModelUtil;

/**
 * This class is automatically generated.
 * DO NOT EDIT THIS FILE DIRECTLY.
 */
@Generated
public final class ChatbotNode implements Entity {
	private static final long serialVersionUID = 1L;

	private Long nodId;
	private String name;
	private String url;
	private Boolean isDev;
	private String color;
	private String apiKey;
	private Boolean isUpToDate;

	@io.vertigo.datamodel.data.stereotype.Association(
			name = "ANodeChatbot",
			fkFieldName = "botId",
			primaryDtDefinitionName = "DtChatbot",
			primaryIsNavigable = true,
			primaryRole = "Chatbot",
			primaryLabel = "Chatbot",
			primaryMultiplicity = "1..1",
			foreignDtDefinitionName = "DtChatbotNode",
			foreignIsNavigable = false,
			foreignRole = "ChatbotNode",
			foreignLabel = "ChatbotNode",
			foreignMultiplicity = "0..*")
	private final StoreVAccessor<io.vertigo.chatbot.commons.domain.Chatbot> botIdAccessor = new StoreVAccessor<>(io.vertigo.chatbot.commons.domain.Chatbot.class, "Chatbot");

	@io.vertigo.datamodel.data.stereotype.Association(
			name = "ANodeTraining",
			fkFieldName = "traId",
			primaryDtDefinitionName = "DtTraining",
			primaryIsNavigable = true,
			primaryRole = "Training",
			primaryLabel = "Loaded model",
			primaryMultiplicity = "0..1",
			foreignDtDefinitionName = "DtChatbotNode",
			foreignIsNavigable = false,
			foreignRole = "ChatbotNode",
			foreignLabel = "ChatbotNode",
			foreignMultiplicity = "0..*")
	private final StoreVAccessor<io.vertigo.chatbot.commons.domain.Training> traIdAccessor = new StoreVAccessor<>(io.vertigo.chatbot.commons.domain.Training.class, "Training");

	/** {@inheritDoc} */
	@Override
	public UID<ChatbotNode> getUID() {
		return UID.of(this);
	}
	
	/**
	 * Champ : ID.
	 * Récupère la valeur de la propriété 'ID'.
	 * @return Long nodId <b>Obligatoire</b>
	 */
	@Field(smartType = "STyId", type = "ID", cardinality = io.vertigo.core.lang.Cardinality.ONE, label = "ID")
	public Long getNodId() {
		return nodId;
	}

	/**
	 * Champ : ID.
	 * Définit la valeur de la propriété 'ID'.
	 * @param nodId Long <b>Obligatoire</b>
	 */
	public void setNodId(final Long nodId) {
		this.nodId = nodId;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'Name'.
	 * @return String name <b>Obligatoire</b>
	 */
	@Field(smartType = "STyLabel", cardinality = io.vertigo.core.lang.Cardinality.ONE, label = "Name")
	public String getName() {
		return name;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'Name'.
	 * @param name String <b>Obligatoire</b>
	 */
	public void setName(final String name) {
		this.name = name;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'URL'.
	 * @return String url <b>Obligatoire</b>
	 */
	@Field(smartType = "STyUrl", cardinality = io.vertigo.core.lang.Cardinality.ONE, label = "URL")
	public String getUrl() {
		return url;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'URL'.
	 * @param url String <b>Obligatoire</b>
	 */
	public void setUrl(final String url) {
		this.url = url;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'Dev node'.
	 * @return Boolean isDev <b>Obligatoire</b>
	 */
	@Field(smartType = "STyYesNo", cardinality = io.vertigo.core.lang.Cardinality.ONE, label = "Dev node")
	public Boolean getIsDev() {
		return isDev;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'Dev node'.
	 * @param isDev Boolean <b>Obligatoire</b>
	 */
	public void setIsDev(final Boolean isDev) {
		this.isDev = isDev;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'Color'.
	 * @return String color <b>Obligatoire</b>
	 */
	@Field(smartType = "STyColor", cardinality = io.vertigo.core.lang.Cardinality.ONE, label = "Color")
	public String getColor() {
		return color;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'Color'.
	 * @param color String <b>Obligatoire</b>
	 */
	public void setColor(final String color) {
		this.color = color;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'ApiKey'.
	 * @return String apiKey <b>Obligatoire</b>
	 */
	@Field(smartType = "STyLabel", cardinality = io.vertigo.core.lang.Cardinality.ONE, label = "ApiKey")
	public String getApiKey() {
		return apiKey;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'ApiKey'.
	 * @param apiKey String <b>Obligatoire</b>
	 */
	public void setApiKey(final String apiKey) {
		this.apiKey = apiKey;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'Is up to date'.
	 * @return Boolean isUpToDate <b>Obligatoire</b>
	 */
	@Field(smartType = "STyYesNo", cardinality = io.vertigo.core.lang.Cardinality.ONE, label = "Is up to date")
	public Boolean getIsUpToDate() {
		return isUpToDate;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'Is up to date'.
	 * @param isUpToDate Boolean <b>Obligatoire</b>
	 */
	public void setIsUpToDate(final Boolean isUpToDate) {
		this.isUpToDate = isUpToDate;
	}
	
	/**
	 * Champ : FOREIGN_KEY.
	 * Récupère la valeur de la propriété 'Chatbot'.
	 * @return Long botId <b>Obligatoire</b>
	 */
	@io.vertigo.datamodel.data.stereotype.ForeignKey(smartType = "STyId", label = "Chatbot", fkDefinition = "DtChatbot", cardinality = io.vertigo.core.lang.Cardinality.ONE )
	public Long getBotId() {
		return (Long) botIdAccessor.getId();
	}

	/**
	 * Champ : FOREIGN_KEY.
	 * Définit la valeur de la propriété 'Chatbot'.
	 * @param botId Long <b>Obligatoire</b>
	 */
	public void setBotId(final Long botId) {
		botIdAccessor.setId(botId);
	}
	
	/**
	 * Champ : FOREIGN_KEY.
	 * Récupère la valeur de la propriété 'Loaded model'.
	 * @return Long traId
	 */
	@io.vertigo.datamodel.data.stereotype.ForeignKey(smartType = "STyId", label = "Loaded model", fkDefinition = "DtTraining" )
	public Long getTraId() {
		return (Long) traIdAccessor.getId();
	}

	/**
	 * Champ : FOREIGN_KEY.
	 * Définit la valeur de la propriété 'Loaded model'.
	 * @param traId Long
	 */
	public void setTraId(final Long traId) {
		traIdAccessor.setId(traId);
	}

 	/**
	 * Association : Chatbot.
	 * @return l'accesseur vers la propriété 'Chatbot'
	 */
	public StoreVAccessor<io.vertigo.chatbot.commons.domain.Chatbot> chatbot() {
		return botIdAccessor;
	}

 	/**
	 * Association : Loaded model.
	 * @return l'accesseur vers la propriété 'Loaded model'
	 */
	public StoreVAccessor<io.vertigo.chatbot.commons.domain.Training> training() {
		return traIdAccessor;
	}
	
	/** {@inheritDoc} */
	@Override
	public String toString() {
		return DataModelUtil.toString(this);
	}
}
