package io.vertigo.chatbot.commons.domain.questionanswer;

import io.vertigo.core.lang.Generated;
import io.vertigo.datamodel.structure.model.Entity;
import io.vertigo.datamodel.structure.model.UID;
import io.vertigo.datastore.impl.entitystore.StoreVAccessor;
import io.vertigo.datamodel.structure.stereotype.Field;
import io.vertigo.datamodel.structure.util.DtObjectUtil;

/**
 * This class is automatically generated.
 * DO NOT EDIT THIS FILE DIRECTLY.
 */
@Generated
public final class QuestionAnswer implements Entity {
	private static final long serialVersionUID = 1L;

	private Long qaId;
	private String question;
	private String answer;
	private Boolean isEnabled;
	private String code;

	@io.vertigo.datamodel.structure.stereotype.Association(
			name = "AQuestionAnswerContextValue",
			fkFieldName = "cvaId",
			primaryDtDefinitionName = "DtContextValue",
			primaryIsNavigable = true,
			primaryRole = "ContextValue",
			primaryLabel = "Context value id",
			primaryMultiplicity = "1..1",
			foreignDtDefinitionName = "DtQuestionAnswer",
			foreignIsNavigable = false,
			foreignRole = "QuestionAnswer",
			foreignLabel = "QuestionAnswer",
			foreignMultiplicity = "0..*")
	private final StoreVAccessor<io.vertigo.chatbot.commons.domain.ContextValue> cvaIdAccessor = new StoreVAccessor<>(io.vertigo.chatbot.commons.domain.ContextValue.class, "ContextValue");

	@io.vertigo.datamodel.structure.stereotype.Association(
			name = "AQuestionAnswerContextPossibleValue",
			fkFieldName = "cpvId",
			primaryDtDefinitionName = "DtContextPossibleValue",
			primaryIsNavigable = true,
			primaryRole = "ContextPossibleValue",
			primaryLabel = "Context possible value id",
			primaryMultiplicity = "1..1",
			foreignDtDefinitionName = "DtQuestionAnswer",
			foreignIsNavigable = false,
			foreignRole = "QuestionAnswer",
			foreignLabel = "QuestionAnswer",
			foreignMultiplicity = "0..*")
	private final StoreVAccessor<io.vertigo.chatbot.commons.domain.ContextPossibleValue> cpvIdAccessor = new StoreVAccessor<>(io.vertigo.chatbot.commons.domain.ContextPossibleValue.class, "ContextPossibleValue");

	@io.vertigo.datamodel.structure.stereotype.Association(
			name = "AQuestionAnswerChatbot",
			fkFieldName = "botId",
			primaryDtDefinitionName = "DtChatbot",
			primaryIsNavigable = true,
			primaryRole = "Chatbot",
			primaryLabel = "Chatbot",
			primaryMultiplicity = "1..1",
			foreignDtDefinitionName = "DtQuestionAnswer",
			foreignIsNavigable = false,
			foreignRole = "QuestionAnswer",
			foreignLabel = "QuestionAnswer",
			foreignMultiplicity = "0..*")
	private final StoreVAccessor<io.vertigo.chatbot.commons.domain.Chatbot> botIdAccessor = new StoreVAccessor<>(io.vertigo.chatbot.commons.domain.Chatbot.class, "Chatbot");

	@io.vertigo.datamodel.structure.stereotype.Association(
			name = "AQuestionAnswerCategoryQuestionAnswer",
			fkFieldName = "qaCatId",
			primaryDtDefinitionName = "DtQuestionAnswerCategory",
			primaryIsNavigable = true,
			primaryRole = "Category",
			primaryLabel = "Category",
			primaryMultiplicity = "1..1",
			foreignDtDefinitionName = "DtQuestionAnswer",
			foreignIsNavigable = false,
			foreignRole = "QuestionAnswer",
			foreignLabel = "QuestionAnswer",
			foreignMultiplicity = "0..*")
	private final StoreVAccessor<io.vertigo.chatbot.commons.domain.questionanswer.QuestionAnswerCategory> qaCatIdAccessor = new StoreVAccessor<>(io.vertigo.chatbot.commons.domain.questionanswer.QuestionAnswerCategory.class, "Category");

	/** {@inheritDoc} */
	@Override
	public UID<QuestionAnswer> getUID() {
		return UID.of(this);
	}
	
	/**
	 * Champ : ID.
	 * Récupère la valeur de la propriété 'Question-Answer id'.
	 * @return Long qaId <b>Obligatoire</b>
	 */
	@Field(smartType = "STyId", type = "ID", cardinality = io.vertigo.core.lang.Cardinality.ONE, label = "Question-Answer id")
	public Long getQaId() {
		return qaId;
	}

	/**
	 * Champ : ID.
	 * Définit la valeur de la propriété 'Question-Answer id'.
	 * @param qaId Long <b>Obligatoire</b>
	 */
	public void setQaId(final Long qaId) {
		this.qaId = qaId;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'Question'.
	 * @return String question <b>Obligatoire</b>
	 */
	@Field(smartType = "STyText", cardinality = io.vertigo.core.lang.Cardinality.ONE, label = "Question")
	public String getQuestion() {
		return question;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'Question'.
	 * @param question String <b>Obligatoire</b>
	 */
	public void setQuestion(final String question) {
		this.question = question;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'Answer'.
	 * @return String answer <b>Obligatoire</b>
	 */
	@Field(smartType = "STyText", cardinality = io.vertigo.core.lang.Cardinality.ONE, label = "Answer")
	public String getAnswer() {
		return answer;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'Answer'.
	 * @param answer String <b>Obligatoire</b>
	 */
	public void setAnswer(final String answer) {
		this.answer = answer;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'Enabled'.
	 * @return Boolean isEnabled <b>Obligatoire</b>
	 */
	@Field(smartType = "STyYesNo", cardinality = io.vertigo.core.lang.Cardinality.ONE, label = "Enabled")
	public Boolean getIsEnabled() {
		return isEnabled;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'Enabled'.
	 * @param isEnabled Boolean <b>Obligatoire</b>
	 */
	public void setIsEnabled(final Boolean isEnabled) {
		this.isEnabled = isEnabled;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'Code'.
	 * @return String code <b>Obligatoire</b>
	 */
	@Field(smartType = "STyText", cardinality = io.vertigo.core.lang.Cardinality.ONE, label = "Code")
	public String getCode() {
		return code;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'Code'.
	 * @param code String <b>Obligatoire</b>
	 */
	public void setCode(final String code) {
		this.code = code;
	}
	
	/**
	 * Champ : FOREIGN_KEY.
	 * Récupère la valeur de la propriété 'Context value id'.
	 * @return Long cvaId <b>Obligatoire</b>
	 */
	@io.vertigo.datamodel.structure.stereotype.ForeignKey(smartType = "STyId", label = "Context value id", fkDefinition = "DtContextValue", cardinality = io.vertigo.core.lang.Cardinality.ONE )
	public Long getCvaId() {
		return (Long) cvaIdAccessor.getId();
	}

	/**
	 * Champ : FOREIGN_KEY.
	 * Définit la valeur de la propriété 'Context value id'.
	 * @param cvaId Long <b>Obligatoire</b>
	 */
	public void setCvaId(final Long cvaId) {
		cvaIdAccessor.setId(cvaId);
	}
	
	/**
	 * Champ : FOREIGN_KEY.
	 * Récupère la valeur de la propriété 'Context possible value id'.
	 * @return Long cpvId <b>Obligatoire</b>
	 */
	@io.vertigo.datamodel.structure.stereotype.ForeignKey(smartType = "STyId", label = "Context possible value id", fkDefinition = "DtContextPossibleValue", cardinality = io.vertigo.core.lang.Cardinality.ONE )
	public Long getCpvId() {
		return (Long) cpvIdAccessor.getId();
	}

	/**
	 * Champ : FOREIGN_KEY.
	 * Définit la valeur de la propriété 'Context possible value id'.
	 * @param cpvId Long <b>Obligatoire</b>
	 */
	public void setCpvId(final Long cpvId) {
		cpvIdAccessor.setId(cpvId);
	}
	
	/**
	 * Champ : FOREIGN_KEY.
	 * Récupère la valeur de la propriété 'Chatbot'.
	 * @return Long botId <b>Obligatoire</b>
	 */
	@io.vertigo.datamodel.structure.stereotype.ForeignKey(smartType = "STyId", label = "Chatbot", fkDefinition = "DtChatbot", cardinality = io.vertigo.core.lang.Cardinality.ONE )
	public Long getBotId() {
		return (Long) botIdAccessor.getId();
	}

	/**
	 * Champ : FOREIGN_KEY.
	 * Définit la valeur de la propriété 'Chatbot'.
	 * @param botId Long <b>Obligatoire</b>
	 */
	public void setBotId(final Long botId) {
		botIdAccessor.setId(botId);
	}
	
	/**
	 * Champ : FOREIGN_KEY.
	 * Récupère la valeur de la propriété 'Category'.
	 * @return Long qaCatId <b>Obligatoire</b>
	 */
	@io.vertigo.datamodel.structure.stereotype.ForeignKey(smartType = "STyId", label = "Category", fkDefinition = "DtQuestionAnswerCategory", cardinality = io.vertigo.core.lang.Cardinality.ONE )
	public Long getQaCatId() {
		return (Long) qaCatIdAccessor.getId();
	}

	/**
	 * Champ : FOREIGN_KEY.
	 * Définit la valeur de la propriété 'Category'.
	 * @param qaCatId Long <b>Obligatoire</b>
	 */
	public void setQaCatId(final Long qaCatId) {
		qaCatIdAccessor.setId(qaCatId);
	}

 	/**
	 * Association : Category.
	 * @return l'accesseur vers la propriété 'Category'
	 */
	public StoreVAccessor<io.vertigo.chatbot.commons.domain.questionanswer.QuestionAnswerCategory> category() {
		return qaCatIdAccessor;
	}

 	/**
	 * Association : Chatbot.
	 * @return l'accesseur vers la propriété 'Chatbot'
	 */
	public StoreVAccessor<io.vertigo.chatbot.commons.domain.Chatbot> chatbot() {
		return botIdAccessor;
	}

 	/**
	 * Association : Context possible value id.
	 * @return l'accesseur vers la propriété 'Context possible value id'
	 */
	public StoreVAccessor<io.vertigo.chatbot.commons.domain.ContextPossibleValue> contextPossibleValue() {
		return cpvIdAccessor;
	}

 	/**
	 * Association : Context value id.
	 * @return l'accesseur vers la propriété 'Context value id'
	 */
	public StoreVAccessor<io.vertigo.chatbot.commons.domain.ContextValue> contextValue() {
		return cvaIdAccessor;
	}
	
	/** {@inheritDoc} */
	@Override
	public String toString() {
		return DtObjectUtil.toString(this);
	}
}
