package io.vertigo.chatbot.commons.domain.topic;

import io.vertigo.core.lang.Generated;
import io.vertigo.datamodel.structure.model.Entity;
import io.vertigo.datamodel.structure.model.UID;
import io.vertigo.datastore.impl.entitystore.StoreVAccessor;
import io.vertigo.datamodel.structure.stereotype.Field;
import io.vertigo.datamodel.structure.util.DtObjectUtil;

/**
 * This class is automatically generated.
 * DO NOT EDIT THIS FILE DIRECTLY.
 */
@Generated
public final class NluTrainingSentence implements Entity {
	private static final long serialVersionUID = 1L;

	private Long ntsId;
	private String text;

	@io.vertigo.datamodel.structure.stereotype.Association(
			name = "ATopicNluTrainingSentence",
			fkFieldName = "topId",
			primaryDtDefinitionName = "DtTopic",
			primaryIsNavigable = true,
			primaryRole = "Topic",
			primaryLabel = "SmallTalk",
			primaryMultiplicity = "1..1",
			foreignDtDefinitionName = "DtNluTrainingSentence",
			foreignIsNavigable = false,
			foreignRole = "NluTrainingSentence",
			foreignLabel = "NluTrainingSentence",
			foreignMultiplicity = "0..*")
	private final StoreVAccessor<io.vertigo.chatbot.commons.domain.topic.Topic> topIdAccessor = new StoreVAccessor<>(io.vertigo.chatbot.commons.domain.topic.Topic.class, "Topic");

	/** {@inheritDoc} */
	@Override
	public UID<NluTrainingSentence> getUID() {
		return UID.of(this);
	}
	
	/**
	 * Champ : ID.
	 * Récupère la valeur de la propriété 'ID'.
	 * @return Long ntsId <b>Obligatoire</b>
	 */
	@Field(smartType = "STyId", type = "ID", cardinality = io.vertigo.core.lang.Cardinality.ONE, label = "ID")
	public Long getNtsId() {
		return ntsId;
	}

	/**
	 * Champ : ID.
	 * Définit la valeur de la propriété 'ID'.
	 * @param ntsId Long <b>Obligatoire</b>
	 */
	public void setNtsId(final Long ntsId) {
		this.ntsId = ntsId;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'Text'.
	 * @return String text <b>Obligatoire</b>
	 */
	@Field(smartType = "STyLabel", cardinality = io.vertigo.core.lang.Cardinality.ONE, label = "Text")
	public String getText() {
		return text;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'Text'.
	 * @param text String <b>Obligatoire</b>
	 */
	public void setText(final String text) {
		this.text = text;
	}
	
	/**
	 * Champ : FOREIGN_KEY.
	 * Récupère la valeur de la propriété 'SmallTalk'.
	 * @return Long topId <b>Obligatoire</b>
	 */
	@io.vertigo.datamodel.structure.stereotype.ForeignKey(smartType = "STyId", label = "SmallTalk", fkDefinition = "DtTopic" )
	public Long getTopId() {
		return (Long) topIdAccessor.getId();
	}

	/**
	 * Champ : FOREIGN_KEY.
	 * Définit la valeur de la propriété 'SmallTalk'.
	 * @param topId Long <b>Obligatoire</b>
	 */
	public void setTopId(final Long topId) {
		topIdAccessor.setId(topId);
	}

 	/**
	 * Association : SmallTalk.
	 * @return l'accesseur vers la propriété 'SmallTalk'
	 */
	public StoreVAccessor<io.vertigo.chatbot.commons.domain.topic.Topic> topic() {
		return topIdAccessor;
	}
	
	/** {@inheritDoc} */
	@Override
	public String toString() {
		return DtObjectUtil.toString(this);
	}
}
